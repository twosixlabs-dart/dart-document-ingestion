kafka {
  application.id: dart-pipeline
  group.id: dart-pipeline

  bootstrap.servers: "kafka-broker-1:19092"
  bootstrap.servers: ${?KAFKA_BOOTSTRAP_SERVERS}

  fetch.message.max.bytes: 50000
  max.request.size: 5000000
  buffer.memory: 50000000
  batch.size: 300000
  linger.ms: 10
  fetch.message.max.bytes: 5000000
  max.partition.fetch.bytes: 5000000

}

http-client-default {}

http-client-config {
  connect.timeout.ms: 10000
  call.timeout.ms: 10000
  read.timeout.ms: 10000
  write.timeout.ms: 10000
}

annotators: {
  enabled: true

  mode: rest
  host: localhost

  retry.count: 5
  retry.pause.millis: 750

  defs: [
    {
      name: qntfy-ner,
      port: 45000,
      path: api/v1/annotate/cdr
      post.process: true
    },
    {
      name: qntfy-categories,
      port: 45001,
      path: api/v1/annotate/cdr
      post.process: false
    },
    {
      name: custom,
      host: my-custom-host,
      port: 45002,
      host: my-custom-host
      path: api/v1/annotate/cdr
      post.process: false
    }
  ]
}

ingest-proxy {
  key.serializer: org.apache.kafka.common.serialization.StringSerializer
  key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value.serializer: org.apache.kafka.common.serialization.StringSerializer
  value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
}

notifications {
  publish.annotation.updates: ${PUBLISH_ANNOTATION_UPDATES}
  publish.annotation.updates: true
  key.serializer: org.apache.kafka.common.serialization.StringSerializer
  value.serializer: org.apache.kafka.common.serialization.StringSerializer
  pool.size: 20
}

operations {
  pool.size: 20
}

sql-conf {
  h2 {
    engine: h2
    name: dart_db_mem
  }

  postgresql {
    engine: postgresql

    host: dart-postgres
    host: ${?SQL_DB_HOST}

    port: 5432
    port: ${?SQL_DB_PORT}

    user: dart
    user: ${?SQL_DB_USER}

    password: dart_pass
    passowrd: ${?SQL_DB_PASSWORD}

    name: dart-db
    name: ${?SQL_DB_NAME}
  }

}

cdr-datastore {
  hbase {
    host: zookeeper-1
    host: ${?ZK_HOST}

    port: 2181
    port: ${?ZK_PORT}
  }

  mem {
    size: 1000
  }
}

search-indexer {
  host: dart-es-master
  host: ${?SEARCH_HOST}

  port: 9200
  port: ${?SEARCH_PORT}

  pool.size: 20
}

dedup {

  mode: embedded
  mode: ${?DEBUG_MODE}

  max.words: 200
  max.words: ${?DEDUP_MAX_WORDS}

  embedded {
    algorithm: shingleprint
    algorithm: ${?DEDUP_EMBEDDED_ALGORITHM}

    shingleprint {
      window: 10
      window: ${?DEDUP_EMBEDDED_SHINGLEPRINT_WINDOW}
      cache {
        mode: disk
        dir = ./target/dedup_cache
      }
    }
  }

}

preprocessors: [ntriples]
